name: notifier

on:
  push:
    branches:
      - main
      - dev
    paths:
      - .github/workflows/notifier.yml
      - notifier/**
      - '!notifier/.vscode/**'
      - '!notifier/docs/**'
      - '!notifier/.docker/**'
      - '!notifier/.editorconfig'
      - '!notifier/.gitignore'
      - '!notifier/**.md'
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/notifier.yml
      - notifier/**
      - '!notifier/.vscode/**'
      - '!notifier/docs/**'
      - '!notifier/.docker/**'
      - '!notifier/.editorconfig'
      - '!notifier/.gitignore'
      - '!notifier/**.md'

env:
  WORKDIR: notifier

jobs:
  build:
    if: |
      github.event_name == 'push' &&
      contains(fromJson('["refs/heads/dev", "refs/heads/main"]'), github.ref)

    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_PERSONAL_ACCESS_TOKEN }}

      - id: lower-repo
        run: |
          echo "REPOSITORY=${GITHUB_REPOSITORY,,}" >> $GITHUB_OUTPUT

      - name: Create image tags
        id: tags
        run: |
          case ${{ github.ref }} in

            refs/heads/dev)
              echo "TAGS=\
              ghcr.io/${{  steps.lower-repo.outputs.REPOSITORY }}-$WORKDIR:dev-latest, \
              ghcr.io/${{  steps.lower-repo.outputs.REPOSITORY }}-$WORKDIR:dev-${{ github.sha }}" >> $GITHUB_OUTPUT
              ;;

            refs/heads/main)
              echo "TAGS=\
              ghcr.io/${{ steps.lower-repo.outputs.REPOSITORY }}-$WORKDIR:latest, \
              ghcr.io/${{ steps.lower-repo.outputs.REPOSITORY }}-$WORKDIR:${{ github.sha }}" >> $GITHUB_OUTPUT
              ;;

            *)
              echo "This branch can't be built";
              exit 1;
              ;;
          esac

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          context: ./${{ env.WORKDIR }}
          tags: ${{ steps.tags.outputs.TAGS }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
